import tkinter as tk
from tkinter import messagebox
import os

task_file = "tasks.txt"

def load_tasks():
    if os.path.exists(task_file):
        with open(task_file, "r") as file:
            return [line.strip() for line in file.readlines()]
    return []

def save_tasks():
    with open(task_file, "w") as file:
        for task in task_listbox.get(0, tk.END):
            file.write(task + "\n")

def add_task():
    task = task_entry.get()
    if task:
        task_listbox.insert(tk.END, task)
        task_entry.delete(0, tk.END)
        save_tasks()
    else:
        messagebox.showwarning("Warning", "Task cannot be empty!")

def delete_task():
    try:
        selected_task_index = task_listbox.curselection()[0]
        task_listbox.delete(selected_task_index)
        save_tasks()
    except IndexError:
        messagebox.showwarning("Warning", "Please select a task to delete!")

def update_task():
    try:
        selected_task_index = task_listbox.curselection()[0]
        updated_task = task_entry.get()
        if updated_task:
            task_listbox.delete(selected_task_index)
            task_listbox.insert(selected_task_index, updated_task)
            task_entry.delete(0, tk.END)
            save_tasks()
        else:
            messagebox.showwarning("Warning", "Updated task cannot be empty!")
    except IndexError:
        messagebox.showwarning("Warning", "Please select a task to update!")

def mark_done():
    try:
        selected_task_index = task_listbox.curselection()[0]
        task = task_listbox.get(selected_task_index)
        if not task.startswith("✔ "):
            task_listbox.delete(selected_task_index)
            task_listbox.insert(selected_task_index, "✔ " + task)
            save_tasks()
    except IndexError:
        messagebox.showwarning("Warning", "Please select a task to mark as done!")

def mark_undone():
    try:
        selected_task_index = task_listbox.curselection()[0]
        task = task_listbox.get(selected_task_index)
        if task.startswith("✔ "):
            task_listbox.delete(selected_task_index)
            task_listbox.insert(selected_task_index, task[2:])
            save_tasks()
    except IndexError:
        messagebox.showwarning("Warning", "Please select a task to mark as undone!")

app = tk.Tk()
app.title("To-Do List")

frame = tk.Frame(app)
frame.pack(pady=10)

task_listbox = tk.Listbox(frame, width=40, height=10)
task_listbox.pack(side=tk.LEFT, padx=5)

scrollbar = tk.Scrollbar(frame, orient=tk.VERTICAL)
scrollbar.config(command=task_listbox.yview)
scrollbar.pack(side=tk.RIGHT, fill=tk.Y)
task_listbox.config(yscrollcommand=scrollbar.set)

for task in load_tasks():
    task_listbox.insert(tk.END, task)

task_entry = tk.Entry(app, width=40)
task_entry.pack(pady=5)

tk.Button(app, text="Add Task", command=add_task).pack(fill=tk.X)
tk.Button(app, text="Update Task", command=update_task).pack(fill=tk.X)
tk.Button(app, text="Delete Task", command=delete_task).pack(fill=tk.X)
tk.Button(app, text="Mark as Done", command=mark_done).pack(fill=tk.X)
tk.Button(app, text="Mark as Undone", command=mark_undone).pack(fill=tk.X)
tk.Button(app, text="Exit", command=app.quit).pack(fill=tk.X, pady=5)

app.mainloop()
